{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Final_capstone","provenance":[],"authorship_tag":"ABX9TyM1b8tAJ1VT2CylT110KC4z"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Yo8JMcMmWArW"},"source":["**Final Capstone Project**\r\n","\r\n","Over the past few years it seems like the number of streaming services has exploded.  It seems like there is a new platform coming out all the time, to varying results.  The way people watch movies and television shows has shifted over the last ten years and is continuing to evolve. \r\n","\r\n","\r\n","For this project, I wanted to look at the specific movies that four streaming services have and how well they are rated.  The streaming services that were included in the original dataset are Netflix, Hulu, Prime Video and Disney+.  The data was organized with a list of movies on the services, their IMDB rating, the director, runtime, and an indication of what streaming service they can be found. \r\n","\r\n","I want to look at the mean IMDB ratings for movies on each platform and see if there is any significant difference between the four. My initial hypothesis would be that there is no significant differences between the mean ratings for each streaming service. \r\n","\r\n","The first step is to mount google colab with my drive and then to import specific libraries below. \r\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H3dL30YnSOSD","executionInfo":{"status":"ok","timestamp":1614464405155,"user_tz":480,"elapsed":27684,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"7ff9ffa5-4ab6-4dbf-ae4c-b9e3696e1264"},"source":["from google.colab import drive\r\n","drive.mount('/content/gdrive')\r\n"," \r\n"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5tO7ouDttHx5","executionInfo":{"status":"ok","timestamp":1614464408770,"user_tz":480,"elapsed":1079,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}}},"source":["#importing pandas to help manipulate the data and statistics \r\n","import pandas as pd\r\n","from scipy import stats\r\n","import seaborn as sns"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Y4NQHpVEB3pb"},"source":["I am using the MoviesONStreamingPlatforms_updated dataset found on kaggle. https://www.kaggle.com/ruchi798/movies-on-netflix-prime-video-hulu-and-disney\r\n","This dataset has 21 columns and contains data about movies on four different streaming platforms and their IMDB ratings. I would like to thank the original author of the dataset for compiling an easily usable set of data. "]},{"cell_type":"code","metadata":{"id":"FE0mTwU2tWIR","executionInfo":{"status":"ok","timestamp":1614464411474,"user_tz":480,"elapsed":742,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}}},"source":["#importing the original csv file with the dataset\r\n","df = pd.read_csv('/content/gdrive/MyDrive/Colab Datasets/movies on streaming platforms 3.csv')"],"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jDD_P80PDdah"},"source":["Checking the data out. "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"id":"EefY6sp7txFz","executionInfo":{"status":"ok","timestamp":1614464417201,"user_tz":480,"elapsed":321,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"3f046104-a36d-4920-ae72-13584d3d60a7"},"source":["df.head()"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>ID</th>\n","      <th>Title</th>\n","      <th>Year</th>\n","      <th>Age</th>\n","      <th>IMDb</th>\n","      <th>Rotten Tomatoes</th>\n","      <th>Netflix Rating</th>\n","      <th>Netflix</th>\n","      <th>Hulu Rating</th>\n","      <th>Hulu</th>\n","      <th>Prime Rating</th>\n","      <th>Prime Video</th>\n","      <th>Disney Rating</th>\n","      <th>Disney+</th>\n","      <th>Type</th>\n","      <th>Directors</th>\n","      <th>Genres</th>\n","      <th>Country</th>\n","      <th>Language</th>\n","      <th>Runtime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Inception</td>\n","      <td>2010</td>\n","      <td>13+</td>\n","      <td>8.8</td>\n","      <td>87%</td>\n","      <td>8.8</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Christopher Nolan</td>\n","      <td>Action,Adventure,Sci-Fi,Thriller</td>\n","      <td>United States,United Kingdom</td>\n","      <td>English,Japanese,French</td>\n","      <td>148.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>The Matrix</td>\n","      <td>1999</td>\n","      <td>18+</td>\n","      <td>8.7</td>\n","      <td>87%</td>\n","      <td>8.7</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Lana Wachowski,Lilly Wachowski</td>\n","      <td>Action,Sci-Fi</td>\n","      <td>United States</td>\n","      <td>English</td>\n","      <td>136.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>Avengers: Infinity War</td>\n","      <td>2018</td>\n","      <td>13+</td>\n","      <td>8.5</td>\n","      <td>84%</td>\n","      <td>8.5</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Anthony Russo,Joe Russo</td>\n","      <td>Action,Adventure,Sci-Fi</td>\n","      <td>United States</td>\n","      <td>English</td>\n","      <td>149.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>Back to the Future</td>\n","      <td>1985</td>\n","      <td>7+</td>\n","      <td>8.5</td>\n","      <td>96%</td>\n","      <td>8.5</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Robert Zemeckis</td>\n","      <td>Adventure,Comedy,Sci-Fi</td>\n","      <td>United States</td>\n","      <td>English</td>\n","      <td>116.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>The Good, the Bad and the Ugly</td>\n","      <td>1966</td>\n","      <td>18+</td>\n","      <td>8.8</td>\n","      <td>97%</td>\n","      <td>8.8</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>8.8</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Sergio Leone</td>\n","      <td>Western</td>\n","      <td>Italy,Spain,West Germany</td>\n","      <td>Italian</td>\n","      <td>161.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Unnamed: 0  ID  ...                 Language  Runtime\n","0           0   1  ...  English,Japanese,French    148.0\n","1           1   2  ...                  English    136.0\n","2           2   3  ...                  English    149.0\n","3           3   4  ...                  English    116.0\n","4           4   5  ...                  Italian    161.0\n","\n","[5 rows x 21 columns]"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"haQ__a7PD6em"},"source":["Exploring the data further. "]},{"cell_type":"code","metadata":{"id":"bIhcOGiPMuwS","executionInfo":{"status":"ok","timestamp":1614464423278,"user_tz":480,"elapsed":343,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}}},"source":["def printDataFrame(df):\r\n","  print('The shape of this DataFrame is {}'.format(df.shape))\r\n","  print('The columns in this DataFrame are {}'.format(df.columns))\r\n","  print('The info:')\r\n","  print(df.info())\r\n"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IifReXxLPhZg","executionInfo":{"status":"ok","timestamp":1614464425232,"user_tz":480,"elapsed":336,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"1b38162b-5b4f-4b61-ad90-b5ec1827468e"},"source":["printDataFrame(df)"],"execution_count":6,"outputs":[{"output_type":"stream","text":["The shape of this DataFrame is (16744, 21)\n","The columns in this DataFrame are Index(['Unnamed: 0', 'ID', 'Title', 'Year', 'Age', 'IMDb', 'Rotten Tomatoes',\n","       'Netflix Rating', 'Netflix', 'Hulu Rating', 'Hulu', 'Prime Rating',\n","       'Prime Video', 'Disney Rating', 'Disney+', 'Type', 'Directors',\n","       'Genres', 'Country', 'Language', 'Runtime'],\n","      dtype='object')\n","The info:\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 16744 entries, 0 to 16743\n","Data columns (total 21 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   Unnamed: 0       16744 non-null  int64  \n"," 1   ID               16744 non-null  int64  \n"," 2   Title            16744 non-null  object \n"," 3   Year             16744 non-null  int64  \n"," 4   Age              7354 non-null   object \n"," 5   IMDb             16173 non-null  float64\n"," 6   Rotten Tomatoes  5158 non-null   object \n"," 7   Netflix Rating   3442 non-null   float64\n"," 8   Netflix          16744 non-null  int64  \n"," 9   Hulu Rating      891 non-null    float64\n"," 10  Hulu             16744 non-null  int64  \n"," 11  Prime Rating     11905 non-null  float64\n"," 12  Prime Video      16744 non-null  int64  \n"," 13  Disney Rating    563 non-null    float64\n"," 14  Disney+          16744 non-null  int64  \n"," 15  Type             16744 non-null  int64  \n"," 16  Directors        16018 non-null  object \n"," 17  Genres           16469 non-null  object \n"," 18  Country          16309 non-null  object \n"," 19  Language         16145 non-null  object \n"," 20  Runtime          16152 non-null  float64\n","dtypes: float64(6), int64(8), object(7)\n","memory usage: 2.7+ MB\n","None\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"StalJk5WDs7G"},"source":["**Statistical Analysis**\r\n","\r\n","Compiling descriptive statistics comparing ratings for each streaming service. "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"hsSDs6k9o7PH","executionInfo":{"status":"ok","timestamp":1614464431245,"user_tz":480,"elapsed":311,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"d1bdf4ff-51a9-4fdc-f054-86b43a6ad25e"},"source":["# statistics for the movie ratings on each streaming site\r\n","df[['Netflix Rating', 'Hulu Rating', 'Prime Rating', 'Disney Rating']].describe()"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Netflix Rating</th>\n","      <th>Hulu Rating</th>\n","      <th>Prime Rating</th>\n","      <th>Disney Rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3442.000000</td>\n","      <td>891.000000</td>\n","      <td>11905.000000</td>\n","      <td>563.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>6.252963</td>\n","      <td>6.145006</td>\n","      <td>5.772365</td>\n","      <td>6.441385</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.139091</td>\n","      <td>1.104691</td>\n","      <td>1.394471</td>\n","      <td>1.032950</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.400000</td>\n","      <td>2.200000</td>\n","      <td>1.000000</td>\n","      <td>1.600000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>5.600000</td>\n","      <td>5.400000</td>\n","      <td>4.900000</td>\n","      <td>5.800000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>6.300000</td>\n","      <td>6.200000</td>\n","      <td>5.900000</td>\n","      <td>6.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>7.100000</td>\n","      <td>7.000000</td>\n","      <td>6.800000</td>\n","      <td>7.200000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>9.300000</td>\n","      <td>9.000000</td>\n","      <td>9.300000</td>\n","      <td>8.700000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       Netflix Rating  Hulu Rating  Prime Rating  Disney Rating\n","count     3442.000000   891.000000  11905.000000     563.000000\n","mean         6.252963     6.145006      5.772365       6.441385\n","std          1.139091     1.104691      1.394471       1.032950\n","min          1.400000     2.200000      1.000000       1.600000\n","25%          5.600000     5.400000      4.900000       5.800000\n","50%          6.300000     6.200000      5.900000       6.500000\n","75%          7.100000     7.000000      6.800000       7.200000\n","max          9.300000     9.000000      9.300000       8.700000"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"GZsQLD70E6mS"},"source":["Creating dataframes for each streaming service.  "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u9fSAyKNOE3-","executionInfo":{"status":"ok","timestamp":1614464437259,"user_tz":480,"elapsed":283,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"e3ed8db8-fb5d-4d1f-e509-6617831e7901"},"source":["# creating dataset for movies on Netflix\r\n","netflix_r = df.iloc[(df['Netflix'] == 1).values]\r\n","netflix_r.info()"],"execution_count":8,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 3560 entries, 0 to 3559\n","Data columns (total 21 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   Unnamed: 0       3560 non-null   int64  \n"," 1   ID               3560 non-null   int64  \n"," 2   Title            3560 non-null   object \n"," 3   Year             3560 non-null   int64  \n"," 4   Age              1677 non-null   object \n"," 5   IMDb             3442 non-null   float64\n"," 6   Rotten Tomatoes  1427 non-null   object \n"," 7   Netflix Rating   3442 non-null   float64\n"," 8   Netflix          3560 non-null   int64  \n"," 9   Hulu Rating      24 non-null     float64\n"," 10  Hulu             3560 non-null   int64  \n"," 11  Prime Rating     342 non-null    float64\n"," 12  Prime Video      3560 non-null   int64  \n"," 13  Disney Rating    10 non-null     float64\n"," 14  Disney+          3560 non-null   int64  \n"," 15  Type             3560 non-null   int64  \n"," 16  Directors        3376 non-null   object \n"," 17  Genres           3469 non-null   object \n"," 18  Country          3407 non-null   object \n"," 19  Language         3382 non-null   object \n"," 20  Runtime          3341 non-null   float64\n","dtypes: float64(6), int64(8), object(7)\n","memory usage: 611.9+ KB\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"-l7LYEeuFKse"},"source":["I am also dropping the null values in each of these new dataframes so that the data reflects ratings for each streaming service category. "]},{"cell_type":"code","metadata":{"id":"e_YuZzXHBBEE","executionInfo":{"status":"ok","timestamp":1614464443712,"user_tz":480,"elapsed":318,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}}},"source":["netflix_r2 = netflix_r['Netflix Rating'].dropna(axis=0)"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kJzmbdoCQ1oJ","executionInfo":{"status":"ok","timestamp":1614464446488,"user_tz":480,"elapsed":344,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"f2680fd8-23e1-4db2-87ad-6778d3828226"},"source":["# creating dataset for movies on Hulu\r\n","hulu_r = df.iloc[(df['Hulu'] == 1).values]\r\n","hulu_r.info()"],"execution_count":10,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 903 entries, 67 to 4437\n","Data columns (total 21 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   Unnamed: 0       903 non-null    int64  \n"," 1   ID               903 non-null    int64  \n"," 2   Title            903 non-null    object \n"," 3   Year             903 non-null    int64  \n"," 4   Age              590 non-null    object \n"," 5   IMDb             892 non-null    float64\n"," 6   Rotten Tomatoes  637 non-null    object \n"," 7   Netflix Rating   24 non-null     float64\n"," 8   Netflix          903 non-null    int64  \n"," 9   Hulu Rating      891 non-null    float64\n"," 10  Hulu             903 non-null    int64  \n"," 11  Prime Rating     240 non-null    float64\n"," 12  Prime Video      903 non-null    int64  \n"," 13  Disney Rating    7 non-null      float64\n"," 14  Disney+          903 non-null    int64  \n"," 15  Type             903 non-null    int64  \n"," 16  Directors        869 non-null    object \n"," 17  Genres           897 non-null    object \n"," 18  Country          892 non-null    object \n"," 19  Language         888 non-null    object \n"," 20  Runtime          885 non-null    float64\n","dtypes: float64(6), int64(8), object(7)\n","memory usage: 155.2+ KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"x9iB76UaBghz","executionInfo":{"status":"ok","timestamp":1614464451688,"user_tz":480,"elapsed":371,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}}},"source":["hulu_r2 = hulu_r['Hulu Rating'].dropna(axis=0)"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CldGhRjWRI2x","executionInfo":{"status":"ok","timestamp":1614464453229,"user_tz":480,"elapsed":300,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"192b6b6b-613b-4ae2-cb5d-496a1d801cf2"},"source":["# creating dataset for movies on Prime Video\r\n","prime_r = df.iloc[(df['Prime Video'] == 1).values]\r\n","prime_r.info()"],"execution_count":12,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 12354 entries, 4 to 16211\n","Data columns (total 21 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   Unnamed: 0       12354 non-null  int64  \n"," 1   ID               12354 non-null  int64  \n"," 2   Title            12354 non-null  object \n"," 3   Year             12354 non-null  int64  \n"," 4   Age              4979 non-null   object \n"," 5   IMDb             11908 non-null  float64\n"," 6   Rotten Tomatoes  3077 non-null   object \n"," 7   Netflix Rating   342 non-null    float64\n"," 8   Netflix          12354 non-null  int64  \n"," 9   Hulu Rating      240 non-null    float64\n"," 10  Hulu             12354 non-null  int64  \n"," 11  Prime Rating     11905 non-null  float64\n"," 12  Prime Video      12354 non-null  int64  \n"," 13  Disney Rating    19 non-null     float64\n"," 14  Disney+          12354 non-null  int64  \n"," 15  Type             12354 non-null  int64  \n"," 16  Directors        11827 non-null  object \n"," 17  Genres           12172 non-null  object \n"," 18  Country          12078 non-null  object \n"," 19  Language         11937 non-null  object \n"," 20  Runtime          11994 non-null  float64\n","dtypes: float64(6), int64(8), object(7)\n","memory usage: 2.1+ MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"xdY4yJIPCeKZ","executionInfo":{"status":"ok","timestamp":1614464458273,"user_tz":480,"elapsed":333,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}}},"source":["prime_r2 = prime_r['Prime Rating'].dropna(axis=0)"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7k-qOKkMRe3-","executionInfo":{"status":"ok","timestamp":1614464459931,"user_tz":480,"elapsed":328,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"97907a43-f3f8-4ece-d690-dd16e3fc646a"},"source":["# creating dataset for movies on Disney plus\r\n","disney_r = df.iloc[(df['Disney+'] == 1).values]\r\n","disney_r.info()"],"execution_count":14,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 564 entries, 95 to 16743\n","Data columns (total 21 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   Unnamed: 0       564 non-null    int64  \n"," 1   ID               564 non-null    int64  \n"," 2   Title            564 non-null    object \n"," 3   Year             564 non-null    int64  \n"," 4   Age              500 non-null    object \n"," 5   IMDb             563 non-null    float64\n"," 6   Rotten Tomatoes  345 non-null    object \n"," 7   Netflix Rating   10 non-null     float64\n"," 8   Netflix          564 non-null    int64  \n"," 9   Hulu Rating      7 non-null      float64\n"," 10  Hulu             564 non-null    int64  \n"," 11  Prime Rating     19 non-null     float64\n"," 12  Prime Video      564 non-null    int64  \n"," 13  Disney Rating    563 non-null    float64\n"," 14  Disney+          564 non-null    int64  \n"," 15  Type             564 non-null    int64  \n"," 16  Directors        555 non-null    object \n"," 17  Genres           564 non-null    object \n"," 18  Country          561 non-null    object \n"," 19  Language         562 non-null    object \n"," 20  Runtime          555 non-null    float64\n","dtypes: float64(6), int64(8), object(7)\n","memory usage: 96.9+ KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"h9_SEwiJCmnw","executionInfo":{"status":"ok","timestamp":1614464465750,"user_tz":480,"elapsed":299,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}}},"source":["disney_r2 = disney_r['Disney Rating'].dropna(axis=0)"],"execution_count":15,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"fylL4OLyWVob"},"source":["**T Test**\r\n","\r\n","Looking to compare each streaming service to see if there is a significant difference between the mean IMDb rating of movies on each service.  The null hypothesis for each test is that there is no significant difference in mean. Will be doing t tests and confidence intervals comparing each streaming service. Because of the unequal sample size for each service, I equated equal variance to false. \r\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K78xe7f760NL","executionInfo":{"status":"ok","timestamp":1614464883100,"user_tz":480,"elapsed":299,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"929bd1a6-e5ef-4e68-a77d-58a73447a1a1"},"source":["stats.ttest_ind(netflix_r2, hulu_r2, equal_var= False)"],"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ttest_indResult(statistic=2.5831935057720323, pvalue=0.009888295602286722)"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WwI502m3TM9Z","executionInfo":{"status":"ok","timestamp":1614323298481,"user_tz":480,"elapsed":335,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"b4f2fc49-ee5d-4c23-a007-d82b574a3f49"},"source":["# Calculate the sample size, mean, and variance of each sample.\r\n","sample_1_n = netflix_r2.shape[0]\r\n","sample_2_n = hulu_r2.shape[0]\r\n","sample_1_mean = netflix_r2.mean()\r\n","sample_2_mean = hulu_r2.mean()\r\n","sample_1_var = netflix_r2.var()\r\n","sample_2_var = hulu_r2.var()\r\n","\r\n","# Calculate the standard error and compute the confidence intervals.\r\n","\r\n","import math\r\n","std_err_difference = math.sqrt((sample_1_var/sample_1_n)+(sample_2_var/sample_2_n))\r\n","\r\n","mean_difference = sample_2_mean - sample_1_mean\r\n","\r\n","margin_of_error = 1.96 * std_err_difference\r\n","ci_lower = mean_difference - margin_of_error\r\n","ci_upper = mean_difference + margin_of_error\r\n","\r\n","print(\"The difference in means at the 95% confidence interval is between \"+str(ci_lower)+\" and \"+str(ci_upper)+\".\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["The difference in means at the 95% confidence interval is between -0.1898708291259315 and -0.026044734281406023.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"jjmAn22RWASR"},"source":["Can reject the null hypothesis that there is no significant difference between the mean ratings of movies on Netflix and Hulu and the difference in means at a 95% confidence interval is between  -0.1898708291259315 and -0.026044734281406023.\r\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HtrjApmxXFOq","executionInfo":{"status":"ok","timestamp":1614464936804,"user_tz":480,"elapsed":300,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"5e27257c-b816-4a4d-8d57-fa0a9ba9d893"},"source":["# ttest between rating of movies on Netflix compared to Prime Video\r\n","stats.ttest_ind(netflix_r2, prime_r2, equal_var= False)"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ttest_indResult(statistic=20.67578083265488, pvalue=4.0752643570273436e-92)"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AbMmYaAJXZaA","executionInfo":{"status":"ok","timestamp":1614323309298,"user_tz":480,"elapsed":301,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"c390873d-cbd2-4595-9780-fc618c173692"},"source":["# Calculate the sample size, mean, and variance of each sample.\r\n","sample_1_n = netflix_r2.shape[0]\r\n","sample_2_n = prime_r2.shape[0]\r\n","sample_1_mean = netflix_r2.mean()\r\n","sample_2_mean = prime_r2.mean()\r\n","sample_1_var = netflix_r2.var()\r\n","sample_2_var = prime_r2.var()\r\n","\r\n","# Calculate the standard error and compute the confidence intervals.\r\n","\r\n","import math\r\n","std_err_difference = math.sqrt((sample_1_var/sample_1_n)+(sample_2_var/sample_2_n))\r\n","\r\n","mean_difference = sample_2_mean - sample_1_mean\r\n","\r\n","margin_of_error = 1.96 * std_err_difference\r\n","ci_lower = mean_difference - margin_of_error\r\n","ci_upper = mean_difference + margin_of_error\r\n","\r\n","print(\"The difference in means at the 95% confidence interval is between \"+str(ci_lower)+\" and \"+str(ci_upper)+\".\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["The difference in means at the 95% confidence interval is between -0.526158122579101 and -0.43503955875493916.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"DAaR5rELYamD"},"source":["Can reject the null hypothesis because the p value is less than .05 with a 95% confidence that the means of IMDB ratings of movies on Netflix and Prime is between -0.526158122579101 and -0.43503955875493916."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mHFWIy5vZXyW","executionInfo":{"status":"ok","timestamp":1614464965291,"user_tz":480,"elapsed":299,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"9b5ae458-4ac2-4e10-bcb5-ed9697b5931b"},"source":["# ttest between rating of movies on Netflix compared to Disney Plus\r\n","stats.ttest_ind(netflix_r2, disney_r2, equal_var= False)"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ttest_indResult(statistic=-3.9528784238148056, pvalue=8.402600800179927e-05)"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q_xYkgDEZzf0","executionInfo":{"status":"ok","timestamp":1614323316417,"user_tz":480,"elapsed":293,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"535c7e1e-987d-46af-8c3a-0fb4741516dc"},"source":["# Calculate the sample size, mean, and variance of each sample.\r\n","sample_1_n = netflix_r2.shape[0]\r\n","sample_2_n = disney_r2.shape[0]\r\n","sample_1_mean = netflix_r2.mean()\r\n","sample_2_mean = disney_r2.mean()\r\n","sample_1_var = netflix_r2.var()\r\n","sample_2_var = disney_r2.var()\r\n","\r\n","# Calculate the standard error and compute the confidence intervals.\r\n","\r\n","import math\r\n","std_err_difference = math.sqrt((sample_1_var/sample_1_n)+(sample_2_var/sample_2_n))\r\n","\r\n","mean_difference = sample_2_mean - sample_1_mean\r\n","\r\n","margin_of_error = 1.96 * std_err_difference\r\n","ci_lower = mean_difference - margin_of_error\r\n","ci_upper = mean_difference + margin_of_error\r\n","\r\n","print(\"The difference in means at the 95% confidence interval is between \"+str(ci_lower)+\" and \"+str(ci_upper)+\".\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["The difference in means at the 95% confidence interval is between 0.09499462958376796 and 0.28184945400180267.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"QGMUu8Nyaapw"},"source":["Can reject the null hypothesis because the p value is less than .05 with a 95% confidence that the difference in means of IMDb ratings of movies on Netflix and Disney plus is between 0.09499462958376796 and 0.28184945400180267"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dLXgBIYfbRyN","executionInfo":{"status":"ok","timestamp":1614465020309,"user_tz":480,"elapsed":282,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"45bdd177-c437-464c-d371-c31d988f56b8"},"source":["# ttest between rating of movies on Hulu compared to Prime Video\r\n","stats.ttest_ind(hulu_r2, prime_r2 ,equal_var= False)"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ttest_indResult(statistic=9.517515624334521, pvalue=1.0586928094838e-20)"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U3ev2FQzbkMH","executionInfo":{"status":"ok","timestamp":1614323323727,"user_tz":480,"elapsed":317,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"98b0dca1-687e-437a-da51-1bfa3b9d5440"},"source":["# Calculate the sample size, mean, and variance of each sample.\r\n","sample_1_n = hulu_r2.shape[0]\r\n","sample_2_n = prime_r2.shape[0]\r\n","sample_1_mean = hulu_r2.mean()\r\n","sample_2_mean = prime_r2.mean()\r\n","sample_1_var = hulu_r2.var()\r\n","sample_2_var = prime_r2.var()\r\n","\r\n","# Calculate the standard error and compute the confidence intervals.\r\n","\r\n","import math\r\n","std_err_difference = math.sqrt((sample_1_var/sample_1_n)+(sample_2_var/sample_2_n))\r\n","\r\n","mean_difference = sample_2_mean - sample_1_mean\r\n","\r\n","margin_of_error = 1.96 * std_err_difference\r\n","ci_lower = mean_difference - margin_of_error\r\n","ci_upper = mean_difference + margin_of_error\r\n","\r\n","print(\"The difference in means at the 95% confidence interval is between \"+str(ci_lower)+\" and \"+str(ci_upper)+\".\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["The difference in means at the 95% confidence interval is between -0.44938130341335203 and -0.2959008145133506.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"aSxW8eUsdplg"},"source":["We can reject the null hypothesis because the p value is less than .05.  The difference in means at the 95% confidence interval is between -0.44938130341335203 and -0.2959008145133506"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nxk-DbwhdD1E","executionInfo":{"status":"ok","timestamp":1614465050577,"user_tz":480,"elapsed":346,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"996db88e-f59e-4a8a-8a93-11e8a9e45547"},"source":["# ttest between rating of movies on Hulu compared to Disney Plus\r\n","stats.ttest_ind(hulu_r2, disney_r2, equal_var= False)"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ttest_indResult(statistic=-5.187040109442908, pvalue=2.4891786075193254e-07)"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hcJ3mjUedO60","executionInfo":{"status":"ok","timestamp":1614323332459,"user_tz":480,"elapsed":304,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"0ea0d1d4-d887-430e-b95f-5c37403181e4"},"source":["# Calculate the sample size, mean, and variance of each sample.\r\n","sample_1_n = hulu_r2.shape[0]\r\n","sample_2_n = disney_r2.shape[0]\r\n","sample_1_mean = hulu_r2.mean()\r\n","sample_2_mean = disney_r2.mean()\r\n","sample_1_var = hulu_r2.var()\r\n","sample_2_var = disney_r2.var()\r\n","\r\n","# Calculate the standard error and compute the confidence intervals.\r\n","\r\n","import math\r\n","std_err_difference = math.sqrt((sample_1_var/sample_1_n)+(sample_2_var/sample_2_n))\r\n","\r\n","mean_difference = sample_2_mean - sample_1_mean\r\n","\r\n","margin_of_error = 1.96 * std_err_difference\r\n","ci_lower = mean_difference - margin_of_error\r\n","ci_upper = mean_difference + margin_of_error\r\n","\r\n","print(\"The difference in means at the 95% confidence interval is between \"+str(ci_lower)+\" and \"+str(ci_upper)+\".\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["The difference in means at the 95% confidence interval is between 0.18438831354156934 and 0.4083713334513388.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"xSphyJh2b_Rq"},"source":["We can reject the null hypothesis because the p value is less than .05.  The difference in means at the 95% confidence interval is between 0.18438831354156934 and 0.4083713334513388"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vcyVfgt3eKgb","executionInfo":{"status":"ok","timestamp":1614465575469,"user_tz":480,"elapsed":349,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"5153deb6-ba52-469f-ca5f-bb8c6c483bad"},"source":["# ttest between rating of movies on Prime Video compared to Disney Plus\r\n","stats.ttest_ind(prime_r2, disney_r2, equal_var= False)"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Ttest_indResult(statistic=-14.745599658479726, pvalue=9.102739327075881e-43)"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dScujWSgefqU","executionInfo":{"status":"ok","timestamp":1614465108239,"user_tz":480,"elapsed":340,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"eab18603-9317-4f3c-8872-1e6cfd187050"},"source":["# Calculate the sample size, mean, and variance of each sample.\r\n","sample_1_n = prime_r2.shape[0]\r\n","sample_2_n = disney_r.shape[0]\r\n","sample_1_mean = prime_r2.mean()\r\n","sample_2_mean = disney_r2.mean()\r\n","sample_1_var = prime_r2.var()\r\n","sample_2_var = disney_r2.var()\r\n","\r\n","# Calculate the standard error and compute the confidence intervals.\r\n","\r\n","import math\r\n","std_err_difference = math.sqrt((sample_1_var/sample_1_n)+(sample_2_var/sample_2_n))\r\n","\r\n","mean_difference = sample_2_mean - sample_1_mean\r\n","\r\n","margin_of_error = 1.96 * std_err_difference\r\n","ci_lower = mean_difference - margin_of_error\r\n","ci_upper = mean_difference + margin_of_error\r\n","\r\n","print(\"The difference in means at the 95% confidence interval is between \"+str(ci_lower)+\" and \"+str(ci_upper)+\".\")"],"execution_count":25,"outputs":[{"output_type":"stream","text":["The difference in means at the 95% confidence interval is between 0.580166561148316 and 0.7578752037712948.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"rlVFy30afB6k"},"source":["We can reject the null hypothesis because the p value is less than .05. The difference in means at the 95% confidence interval is between 0.580166561148316 and 0.7578752037712948."]},{"cell_type":"markdown","metadata":{"id":"eQksmkrhGGNb"},"source":["**Visualizing the data**\r\n","\r\n","These histograms show the distribution of movie ratings for each streaming service. \r\n","\r\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"BgJib80BsLV5","executionInfo":{"status":"ok","timestamp":1614323351072,"user_tz":480,"elapsed":1688,"user":{"displayName":"John Ford","photoUrl":"","userId":"02525233193044961385"}},"outputId":"6e1a77a7-4c67-41b9-dbe2-29b5ed2d32f6"},"source":["ax = sns.displot(netflix_r2, bins=20)\r\n","print(ax)\r\n","bx = sns.displot(hulu_r2, bins=20)\r\n","print(bx)\r\n","cx = sns.displot(prime_r2, bins=20)\r\n","print(cx)\r\n","dx = sns.displot(disney_r2, bins=20)\r\n","print(dx)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<seaborn.axisgrid.FacetGrid object at 0x7fb12df34e10>\n","<seaborn.axisgrid.FacetGrid object at 0x7fb12ded8810>\n","<seaborn.axisgrid.FacetGrid object at 0x7fb125609210>\n","<seaborn.axisgrid.FacetGrid object at 0x7fb12564cc10>\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"Efg0qLjXHClZ"},"source":["**Conclusion**\r\n","\r\n","I found that my original hypothesis that there would be no significant differences between movie ratings on streaming services was incorrect.  I found that there was a significant difference between the mean ratings of movies on all streaming services and that the null can be rejected. \r\n","\r\n","There were some samples that were larger than others, with Prime and Netflix having thousands of movies compared to Hulu and Disney, so that needs to be taken into account.  \r\n","\r\n","This analysis shows that Disney+ has the highest rated movies, followed by Netflix, Hulu and then Prime Video.  The intended audience could use this analysis for insights into the content on streaming services and the quality of the content on streaming services. "]}]}